// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    RAM64(in[0..15] =  in[0..15],load = load1, address[0..5] = address[0..5], out[0..15] = out1);
	RAM64(in[0..15] =  in[0..15],load = load2, address[0..5] = address[0..5], out[0..15] = out2);
	RAM64(in[0..15] =  in[0..15],load = load3, address[0..5] = address[0..5], out[0..15] = out3);
	RAM64(in[0..15] =  in[0..15],load = load4, address[0..5] = address[0..5], out[0..15] = out4);
	RAM64(in[0..15] =  in[0..15],load = load5, address[0..5] = address[0..5], out[0..15] = out5);
	RAM64(in[0..15] =  in[0..15],load = load6, address[0..5] = address[0..5], out[0..15] = out6);
	RAM64(in[0..15] =  in[0..15],load = load7, address[0..5] = address[0..5], out[0..15] = out7);
	RAM64(in[0..15] =  in[0..15],load = load8, address[0..5] = address[0..5], out[0..15] = out8);
	Mux8Way16(a = out1, b = out2, c = out3, d = out4, e = out5, f = out6, g = out7, h = out8, sel[0..2] = address[6..8], out[0..15] = out[0..15]);
	DMux8Way(in = load, sel[0..2] = address[6..8], a = load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);
}